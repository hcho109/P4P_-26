<!-- 2d plot javascript -->
    <script>
        // Retrieve the canvas element
        var canvas = document.getElementById('2dCanvas');
        var ctx = canvas.getContext('2d');

        // Set the canvas size
        canvas.width = 400;
        canvas.height = 400;

        // Set the circle parameters
        var centerX = canvas.width / 2;
        var centerY = canvas.height / 2;
        var radius = Math.min(canvas.width, canvas.height) / 2 - 20;

        // Clear the canvas
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        // Draw the circle
        ctx.beginPath();
        ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);
        ctx.stroke();

        // Draw x and y axes
        ctx.beginPath();
        ctx.moveTo(centerX - radius, centerY);
        ctx.lineTo(centerX + radius, centerY);
        ctx.moveTo(centerX, centerY - radius);
        ctx.lineTo(centerX, centerY + radius);
        ctx.lineWidth = 1;
        ctx.strokeStyle = 'black';
        ctx.stroke();

        // Draw x and y axis labels
        ctx.font = '12px Arial';
        ctx.fillStyle = 'black';
        ctx.fillText('-1', centerX - radius - 20, centerY + 15);
        ctx.fillText('1', centerX + radius - 8, centerY + 15);
        ctx.fillText('-1', centerX - 20, centerY + radius + 15);
        ctx.fillText('1', centerX - 8, centerY - radius + 15);

        // Draw x and y axis arrows
        ctx.beginPath();
        ctx.moveTo(centerX + radius - 5, centerY + 5);
        ctx.lineTo(centerX + radius, centerY);
        ctx.lineTo(centerX + radius - 5, centerY - 5);

        ctx.moveTo(centerX - 5, centerY - radius + 5);
        ctx.lineTo(centerX, centerY - radius);
        ctx.lineTo(centerX + 5, centerY - radius + 5);
        ctx.lineWidth = 2;
        ctx.strokeStyle = 'black';
        ctx.stroke();


        // Landmark scatter plot data
        var landmarkEmotions = ['angry', 'afraid', 'sad', 'bored', 'excited', 'interested', 'happy', 'pleased', 'relaxed', 'content'];
        var landmarkValence = [-0.7, -0.65, -0.8, -0.1, 0.37, 0.2, 0.5, 0.35, 0.6, 0.5];
        var landmarkArousal = [0.65, 0.5, -0.15, -0.45, 0.9, 0.7, 0.5, 0.35, -0.3, -0.45];

        // Draw a point at (0, 0) - the origin
        var originX = centerX;
        var originY = centerY;
        ctx.beginPath();
        ctx.arc(originX, originY, 3, 0, 2 * Math.PI);
        ctx.fillStyle = 'red';
        ctx.fill();

        // Arrays to store points and corresponding video times
        var points = [];
        var videoTimes = [];

        // Variable to track if recording is in progress
        var recording = false;

        // Function to capture mouse position and record data into points and videoTimes arrays
        function recordMousePosition(event) {
          if (recording) {
            // Get the mouse position relative to the canvas
            var rect = canvas.getBoundingClientRect();
            var mouseX = event.clientX - rect.left;
            var mouseY = event.clientY - rect.top;

            // Convert the mouse position to plot coordinates
            var plotX = (mouseX - centerX) / radius;
            var plotY = (centerY - mouseY) / radius; // Flip y-coordinate to match canvas coordinate system

            // Add the converted coordinates to the points array
            points.push({ x: plotX, y: plotY });
            // Add the corresponding video time to the videoTimes array
            videoTimes.push(video.currentTime);
          }
        }

        // Call recordMousePosition whenever the mouse is moved over the canvas
        canvas.addEventListener('mousemove', recordMousePosition);  

        // Start recording when the video starts playing
        var video = document.getElementById('video');
        video.addEventListener('play', function() {
            recording = true;
        });

        // Stop recording when the video is paused or ended
        video.addEventListener('pause', function() {
            recording = false;
        });
        video.addEventListener('ended', function() {
            recording = false;
        });

        // Function to draw the circle and scatter plot points on the canvas
        function draw() {
                    
          // Draw scatter plot points
          points.forEach(function(point) {
            var x = centerX + point.x * radius;
            var y = centerY - point.y * radius; // Flip y-coordinate to match canvas coordinate system
            ctx.beginPath();
            ctx.arc(x, y, 3, 0, 2 * Math.PI);
            ctx.fillStyle = 'blue';
            ctx.fill();
          });

          // Request the next frame to continue drawing
          requestAnimationFrame(draw);
        }

        // Start drawing
        requestAnimationFrame(draw);

        
    </script>